## IPTG injection experiment
library("platexpress")
source("~/programs/platexpress/R/platereader.R")

setwd("~/work/CoilProject/experiments/plategrowth/ecoli_ts_20161014")

plate <-readPlateMap("20161014_platemap.csv",fsep=";",fields=c("strain","IPTG","blank"))

files <- c("20161014_20161014 IPTG mVenus Injection  1_Absorbance.CSV",
           "20161014_20161014 IPTG mVenus Injection  1_Fluorescence.CSV")
raw <- readPlateData(files,type="BMG")

## time in minutes
raw$Time <- raw$Time/60
raw <- prettyData(raw, dids=c(OD="584",mVenus="485/Em520"),
                  colors=c("#333300",wavelength2RGB(600)))

## view data
vp <- viewPlate(raw)
vp <- viewPlate(raw,xlim=c(0,1800),xscale=TRUE)

## inspect blanks
if ( !interactive() )
    plotdev("Ecoli_20161014_blanks_raw",type="png",width=8,height=4)
vp <- viewPlate(raw,rows=c("H","A","G"))#,xlim=c(0,2500))
if ( !interactive() ) dev.off()

## blank FLUORESCENCE BY TIME
raw2 <- correctBlanks(raw,plate,dids="mVenus",by=c("strain","IPTG"),
                      mbins=length(raw$Time)/5)
## blank OD by mean
data <- correctBlanks(raw2,plate,dids="OD",max.mid=2000)


if ( !interactive() )
    plotdev("Ecoli_20161014_blanks_blanked",type="png",width=8,height=4)
vp <- viewPlate(data,rows=c("H","A","G"))#,xlim=c(0,2500))
if ( !interactive() ) dev.off()

## raise above 0, for each well separately
groups <- getGroups(plate,by=c("strain","IPTG"))
data <- adjustBase(data, dids="OD", base=0, wells=unlist(groups),xlim=c(1,which(raw$Time>1500)[1]),each=TRUE,add.fraction=0.001)
#data <- adjustBase(data, dids="mVenus", base=1)
vp <- viewPlate(data)

## summary view of all columns (injections)
## NOTE: drop in OD visible in late injections 600-900
groups <- getGroups(plate,by=c("strain","IPTG"))
viewGroups(data,groups[1:12])
if ( !interactive() )
    plotdev("Ecoli_20161014_injections",type="png",width=18,height=4)
viewGroups(data,groups[1:12],xlim=c(0,1800))
if ( !interactive() ) dev.off()

sgroups <- getGroups(plate,by=c("strain"))
viewGroups(data,groups=sgroups,groups2=groups)
viewGroups(data,groups2=sgroups,xlim=c(0,1800))

viewGroups(data,groups=sgroups[2],groups2=groups,xlim=c(0,1800),show.ci95=TRUE,lty.orig=1,lwd.orig=.5,log="")

## summary figure
if ( !interactive() )
    plotdev("Ecoli_20161014_summary_raw",type="png",width=8,height=4)
viewGroups(raw,groups=sgroups,groups2=groups,xlim=c(1,1800),dids=c("OD","mVenus"),log="y",g2.legend=FALSE)
if ( !interactive() ) dev.off()

if ( !interactive() )
    plotdev("Ecoli_20161014_summary_blanked",type="png",width=8,height=4)
viewGroups(data,groups2=groups,groups=sgroups,xlim=c(0,1800),show.ci95=TRUE,lty.orig=1,lwd.orig=.5,dids=c("OD","mVenus"),log="",g2.legend=FALSE)
if ( !interactive() ) dev.off()

## simply subtract uninduced fluorescence
fl <- getData(data,"mVenus")
noiptg <- fl[ , paste(toupper(letters[1:7]), 2, sep="")]
noiptg <- rowMeans(noiptg)

fl <- fl - noiptg

## brute force - required for log
#fl[fl<=5] <- 5

data <- addData(data, ID="mV-unind.", dat=fl, col=wavelength2RGB(600), replace=TRUE)

if ( !interactive() )
    plotdev("Ecoli_20161014_mV-unind",type="png",width=8,height=4)
viewGroups(data,sgroups,groups,dids=c("OD","mV-unind."),lwd.orig=0.5,lty.orig=1,xlim=c(0,1800)) #,log="y")
if ( !interactive() ) dev.off()


## FL/OD ratio
## TODO: fix, raise all above 0
## heavily smooth OD!
fl <- getData(data,"mV-unind.")
od <- getData(data,"OD")
fl <- fl/od
fl <- apply(fl,2,ma,n=20)
data <- addData(data, ID="mV-unind./OD", dat=fl, col=wavelength2RGB(400), replace=TRUE)
if ( !interactive() )
    plotdev("Ecoli_20161014_mV-unind_OD",type="png",width=8,height=4)
viewGroups(data,sgroups,groups,dids=c("OD","mV-unind./OD"),lwd.orig=0,lty.orig=1,xlim=c(0,1800),ylims=list("mV-unind./OD"=c(-100,1e4)),show.ci95=TRUE,show.mean=TRUE,g2.legend=FALSE,emphasize.mean=TRUE) #,log="y")
arrows(x0=seq(0,900,100),x1=seq(0,900,100),y0=-100,y1=0,lwd=3,col="blue",length=.1)
if ( !interactive() ) dev.off()

## FL/OD ratio
## TODO: fix, raise all above 0
## heavily smooth OD!
fl <- getData(data,"mVenus")
od <- getData(data,"OD")
fl <- fl/od
fl <- apply(fl,2,ma,n=20)
data <- addData(data, ID="mV/OD", dat=fl, col=wavelength2RGB(400), replace=TRUE)
if ( !interactive() )
    plotdev("Ecoli_20161014_mV_OD",type="png",width=8,height=4)
viewGroups(data,sgroups,groups,dids=c("OD","mV/OD"),lwd.orig=0,lty.orig=1,xlim=c(0,1800),ylims=list("mV/OD"=c(-100,1e4)),show.ci95=TRUE,show.mean=TRUE,g2.legend=FALSE,emphasize.mean=TRUE) #,log="y")
arrows(x0=seq(0,900,100),x1=seq(0,900,100),y0=-100,y1=0,lwd=3,col="blue",length=.1)
if ( !interactive() ) dev.off()


## calculate fold-ratio per OD
fl <- getData(data,"mV/OD")
noiptg <- fl[ , paste(toupper(letters[1:7]), 2, sep="")]
noiptg <- rowMeans(noiptg)
fl <- fl / noiptg
fl <- apply(fl,2,ma,n=5)
data <- addData(data, ID="mV/OD/unind.", dat=fl, col=wavelength2RGB(500), replace=TRUE)

if ( !interactive() )
    plotdev("Ecoli_20161014_mV_OD_unind",type="png",width=8,height=4)
viewGroups(data,sgroups,groups,dids=c("OD","mV/OD/unind."),lwd.mean=2,lwd.orig=0,lty.orig=1,xlim=c(0,1800),show.ci95=TRUE,g2.legend=FALSE,emphasize.mean=TRUE,ylims=list("mV/OD/unind."=c(0,12)))
## emphasize means
#stats <- groupStats(data,groups,dids="mV/OD/unind.")
#apply(stats$"mV/OD/unind."$stats$mean, 2, function(x) lines(stats$Time, x))
arrows(x0=seq(0,900,100),x1=seq(0,900,100),y0=-100,y1=0,lwd=3,col="blue",length=.1)
if ( !interactive() ) dev.off()

## calculate difference per OD
fl <- getData(data,"mV/OD")
noiptg <- fl[ , paste(toupper(letters[1:7]), 2, sep="")]
noiptg <- rowMeans(noiptg)
fl <- fl - noiptg
fl <- apply(fl,2,ma,n=5)
data <- addData(data, ID="mV/OD-unind.", dat=fl, col=wavelength2RGB(500), replace=TRUE)


if ( !interactive() )
    plotdev("Ecoli_20161014_mV_OD-unind",type="png",width=8,height=4)
viewGroups(data,sgroups,groups,dids=c("OD","mV/OD-unind."),lwd.mean=2,lwd.orig=0,lty.orig=1,xlim=c(0,1800),ylims=list("mV/OD-unind."=c(0,1e4)),show.ci95=TRUE,g2.legend=FALSE,emphasize.mean=TRUE)
## emphasize means
#stats <- groupStats(data,groups,dids="mV/OD/unind.")
#apply(stats$"mV/OD/unind."$stats$mean, 2, function(x) lines(stats$Time, x))
arrows(x0=seq(0,900,100),x1=seq(0,900,100),y0=-100,y1=0,lwd=3,col="blue",length=.1)
if ( !interactive() ) dev.off()

## calculate fold-ratio
fl <- getData(data,"mVenus")
noiptg <- fl[ , paste(toupper(letters[1:7]), 2, sep="")]
noiptg <- rowMeans(noiptg)
fl <- fl / noiptg
## brute force - required for log
#fl[fl<=5] <- 5
data <- addData(data, ID="mV/unind.", dat=fl, col=wavelength2RGB(600), replace=TRUE)

viewGroups(data,sgroups[2],groups,dids=c("OD","mV/unind."),lwd.mean=2,lwd.orig=0,lty.orig=1,xlim=c(0,1800),ylims=list("mV/unind."=c(0,10)))

## -> to confused, strip it down:
if ( !interactive() )
    plotdev("Ecoli_20161014_mV_unind",type="png",width=8,height=4)
viewGroups(data,sgroups,groups,dids=c("OD","mV/unind."),lwd.mean=2,lwd.orig=0,lty.orig=1,xlim=c(0,1800),ylims=list("mV/unind."=c(0,10)),show.ci95=TRUE,g2.legend=FALSE) 
arrows(x0=seq(0,900,100),x1=seq(0,900,100),y0=0.5,y1=1,lwd=3,col="blue",length=.1)
if ( !interactive() ) dev.off()

if ( !interactive() )
    plotdev("Ecoli_20161014_mV-unind",type="png",width=8,height=4)
viewGroups(data,sgroups,groups,dids=c("OD","mV-unind."),lwd.mean=2,lwd.orig=0,lty.orig=1,xlim=c(0,1800),show.ci95=TRUE,g2.legend=FALSE) 
arrows(x0=seq(0,900,100),x1=seq(0,900,100),y0=0.5,y1=1,lwd=3,col="blue",length=.1)
if ( !interactive() ) dev.off()

## TODO: show injection times on OD lines, get max. OD and draw arrow

## TODO: implement time-shifts in plate-express, estimate by gompertz et al.
library("grofit")
source("~/programs/platexpress/R/gcFit.R") # hack for grofit function
control <- grofit.control()
control$interactive <- interactive() 
control$plot <- TRUE
#control$model.type <- "gompertz"
wells <- unlist(groups)
wells <- wells[wells%in%colnames(data$OD$data)]

## here base adjustment leads to failure in gcFit, since neg. values
## appear as a dip in "late lag" phase and are treated as NA in
## grofit
##data <- adjustBase(data,base=0, "OD")
## TODO: heavily smooth/moving average data before grofit!

tmp <- data2grofit(data,"OD",wells=wells,plate=plate,eid=c("strain","IPTG"),
                   dose=wells,max.time=1500,min.time=200)

pdf("Ecoli_20161014_OD_grofit.pdf",width=5, height=5)
odfit <- gcFit(tmp$time, tmp$data,control)
dev.off()

odfit$gcTable[,c("TestId","lambda.model","mu.model","A.model")]
lag <-  odfit$gcTable[,"lambda.model"]
id <- odfit$gcTable[,"TestId"]
## TODO: automate (go deeper into grofit) to subtract lag from data
## align all to the minimal lag phase found!
## OR: use self-made strategy to find lag, e.g., cross-correlation

